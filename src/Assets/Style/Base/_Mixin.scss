/* ========================================== */
/* =============== MIXIN LIBRARY ============ */
/* ========================================== */
/* Best Practice: Wiederverwendbare Mixins fÃ¼r konsistente Styles */

/* ========================================== */
// Layout & Positioning Mixins
/* ========================================== */

// Flexbox Utilities
@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}

@mixin flex-column-center {
    @include flex-column;
    justify-content: center;
    align-items: center;
}

@mixin flex-wrap {
    display: flex;
    flex-wrap: wrap;
}

@mixin flex-grid($columns: 3, $gap: $space-4) {
    display: flex;
    flex-wrap: wrap;
    gap: $gap;

    >* {
        flex: 1 1 calc((100% - (#{$gap} * (#{$columns} - 1))) / #{$columns});
        min-width: 0;
    }
}

// Grid Utilities
@mixin grid-center {
    display: grid;
    place-items: center;
}

@mixin grid-columns($columns, $gap: $space-4) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

@mixin grid-auto-fit($min-width: 250px, $gap: $space-4) {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
    gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: $space-4) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
    gap: $gap;
}

// Positioning
@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin absolute-full {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin fixed-full {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin sticky-top($offset: 0) {
    position: sticky;
    top: $offset;
    z-index: $z-index-sticky;
}

/* ========================================== */
// Responsive & Breakpoint Mixins
/* ========================================== */

// Media Query Helpers
@mixin mobile-only {
    @media (max-width: #{$breakpoint-sm - 1px}) {
        @content;
    }
}

@mixin tablet-up {
    @media (min-width: $breakpoint-sm) {
        @content;
    }
}

@mixin tablet-only {
    @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-md - 1px}) {
        @content;
    }
}

@mixin desktop-up {
    @media (min-width: $breakpoint-md) {
        @content;
    }
}

@mixin desktop-only {
    @media (min-width: $breakpoint-md) and (max-width: #{$breakpoint-lg - 1px}) {
        @content;
    }
}

@mixin large-desktop-up {
    @media (min-width: $breakpoint-lg) {
        @content;
    }
}

@mixin xl-desktop-up {
    @media (min-width: $breakpoint-xl) {
        @content;
    }
}

@mixin xxl-desktop-up {
    @media (min-width: $breakpoint-2xl) {
        @content;
    }
}

// Custom breakpoint
@mixin breakpoint($min: null, $max: null) {
    @if $min and $max {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    }

    @else if $min {
        @media (min-width: $min) {
            @content;
        }
    }

    @else if $max {
        @media (max-width: $max) {
            @content;
        }
    }
}

// Container Mixin
@mixin container($max-width: $container-xl, $padding: $space-4) {
    width: 100%;
    max-width: $max-width;
    margin-left: auto;
    margin-right: auto;
    padding-left: $padding;
    padding-right: $padding;
}

/* ========================================== */
// Typography Mixins
/* ========================================== */

// Font Size with Line Height
@mixin font-size($size, $line-height: null) {
    font-size: $size;

    @if $line-height {
        line-height: $line-height;
    }
}

// Responsive Font Size
@mixin responsive-font($min-size, $max-size, $min-screen: $breakpoint-sm, $max-screen: $breakpoint-xl) {
    font-size: $min-size;

    @media (min-width: $min-screen) {
        font-size: calc(#{$min-size} + (#{strip-unit($max-size)} - #{strip-unit($min-size)}) * ((100vw - #{$min-screen}) / (#{strip-unit($max-screen)} - #{strip-unit($min-screen)})));
    }

    @media (min-width: $max-screen) {
        font-size: $max-size;
    }
}

// Helper function to remove units
@function strip-unit($number) {
    @if type-of($number)=='number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

// Text Truncation
@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin text-truncate-multiline($lines: 2) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

// Text Selection
@mixin selection($background: var(--color-primary), $color: var(--color-text-inverse)) {
    ::selection {
        background: $background;
        color: $color;
        text-shadow: none;
    }

    ::-moz-selection {
        background: $background;
        color: $color;
        text-shadow: none;
    }
}

/* ========================================== */
// Button & Form Mixins
/* ========================================== */

// Button Base
@mixin button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: $space-2;

    font-family: var(--font-family-primary);
    font-weight: $font-weight-medium;
    font-size: $font-size-base;
    line-height: $line-height-normal;
    text-decoration: none;
    text-align: center;
    white-space: nowrap;

    padding: $btn-padding-y $btn-padding-x;
    border: 1px solid transparent;
    border-radius: $btn-border-radius;

    cursor: pointer;
    user-select: none;
    vertical-align: middle;

    transition: $transition-base;

    &:focus-visible {
        outline: 2px solid var(--color-primary);
        outline-offset: 2px;
    }

    &:disabled,
    &.disabled {
        opacity: var(--disabled-opacity, 0.6);
        cursor: var(--disabled-cursor, not-allowed);
        pointer-events: none;
    }
}

// Button Variants
@mixin button-variant($bg-color, $text-color, $border-color: $bg-color) {
    background-color: $bg-color;
    color: $text-color;
    border-color: $border-color;

    &:hover:not(:disabled) {
        background-color: darken($bg-color, 8%);
        border-color: darken($border-color, 8%);
        transform: translateY(-1px);
    }

    &:active:not(:disabled) {
        background-color: darken($bg-color, 12%);
        border-color: darken($border-color, 12%);
        transform: translateY(0);
    }
}

@mixin button-outline($color) {
    background-color: transparent;
    color: $color;
    border-color: $color;

    &:hover:not(:disabled) {
        background-color: $color;
        color: var(--color-text-inverse, white);
    }

    &:active:not(:disabled) {
        background-color: darken($color, 8%);
        border-color: darken($color, 8%);
    }
}

@mixin button-ghost($color) {
    background-color: transparent;
    color: $color;
    border-color: transparent;

    &:hover:not(:disabled) {
        background-color: rgba($color, 0.1);
    }

    &:active:not(:disabled) {
        background-color: rgba($color, 0.2);
    }
}

// Button Sizes
@mixin button-size($padding-y, $padding-x, $font-size, $border-radius: $btn-border-radius) {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    border-radius: $border-radius;
}

// Form Input Base
@mixin input-base {
    display: block;
    width: 100%;

    font-family: var(--font-family-primary);
    font-size: $input-font-size;
    font-weight: $font-weight-normal;
    line-height: $line-height-normal;
    color: var(--color-input-text, var(--color-text-primary));

    background-color: var(--color-input-bg, var(--color-surface));
    border: $input-border-width solid var(--color-input-border, var(--color-border));
    border-radius: $input-border-radius;
    padding: $input-padding-y $input-padding-x;

    transition: $transition-base;

    &:focus {
        outline: none;
        border-color: var(--color-input-border-focus, var(--color-primary));
        box-shadow: 0 0 0 3px rgba(var(--color-primary), 0.1);
    }

    &::placeholder {
        color: var(--color-input-placeholder, var(--color-text-tertiary));
        opacity: 1;
    }

    &:disabled,
    &[readonly] {
        background-color: var(--color-input-disabled-bg, var(--color-background-secondary));
        color: var(--color-input-disabled-text, var(--color-text-disabled));
        border-color: var(--color-input-disabled-border, var(--color-border));
        opacity: 1;
        cursor: not-allowed;
    }
}

// Form Validation States
@mixin input-validation($color) {
    border-color: $color;

    &:focus {
        border-color: $color;
        box-shadow: 0 0 0 3px rgba($color, 0.1);
    }
}

/* ========================================== */
// Visual Effects Mixins
/* ========================================== */

// Shadows
@mixin shadow($level: 'base') {
    @if $level =='xs' {
        box-shadow: $shadow-xs;
    }

    @else if $level =='sm' {
        box-shadow: $shadow-sm;
    }

    @else if $level =='base' {
        box-shadow: $shadow-base;
    }

    @else if $level =='md' {
        box-shadow: $shadow-md;
    }

    @else if $level =='lg' {
        box-shadow: $shadow-lg;
    }

    @else if $level =='xl' {
        box-shadow: $shadow-xl;
    }

    @else if $level =='2xl' {
        box-shadow: $shadow-2xl;
    }

    @else if $level =='inner' {
        box-shadow: $shadow-inner;
    }

    @else {
        box-shadow: $level;
    }
}

// Glow Effect
@mixin glow($color: var(--color-primary), $intensity: 'base') {
    @if $enable-glow-effects {
        @if $intensity =='sm' {
            box-shadow: 0 0 5px rgba($color, 0.5);
        }

        @else if $intensity =='base' {
            box-shadow: 0 0 10px rgba($color, 0.5);
        }

        @else if $intensity =='md' {
            box-shadow: 0 0 15px rgba($color, 0.5);
        }

        @else if $intensity =='lg' {
            box-shadow: 0 0 20px rgba($color, 0.5);
        }

        @else if $intensity =='xl' {
            box-shadow: 0 0 30px rgba($color, 0.5);
        }
    }
}

// Text Glow
@mixin text-glow($color: var(--color-primary), $intensity: 'base') {
    @if $enable-glow-effects {
        @if $intensity =='sm' {
            text-shadow: 0 0 5px rgba($color, 0.8);
        }

        @else if $intensity =='base' {
            text-shadow: 0 0 10px rgba($color, 0.8);
        }

        @else if $intensity =='lg' {
            text-shadow: 0 0 15px rgba($color, 0.8);
        }

        @else if $intensity =='xl' {
            text-shadow: 0 0 20px rgba($color, 0.8);
        }
    }
}

// Gradients
@mixin gradient-linear($direction: 45deg, $colors...) {
    background: linear-gradient($direction, $colors);
}

@mixin gradient-radial($colors...) {
    background: radial-gradient(circle, $colors);
}

@mixin gradient-text($gradient) {
    background: $gradient;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
}

// Border Effects
@mixin border-gradient($width: 1px, $gradient: linear-gradient(45deg, var(--color-primary), var(--color-accent))) {
    position: relative;
    background: var(--color-surface);
    border-radius: inherit;

    &::before {
        content: '';
        position: absolute;
        inset: 0;
        padding: $width;
        background: $gradient;
        border-radius: inherit;
        mask: linear-gradient(white 0 0) content-box, linear-gradient(white 0 0);
        mask-composite: exclude;
        -webkit-mask-composite: xor;
    }
}

/* ========================================== */
// Animation Mixins - Enhanced
/* ========================================== */

@mixin animate-on-scroll($animation: 'fade-up', $duration: $duration-500, $delay: 0s) {
    opacity: 0;

    @if $animation =='fade-up' {
        transform: translateY(2rem) $gpu-hack;
    }

    @else if $animation =='fade-down' {
        transform: translateY(-2rem) $gpu-hack;
    }

    @else if $animation =='fade-left' {
        transform: translateX(-2rem) $gpu-hack;
    }

    @else if $animation =='fade-right' {
        transform: translateX(2rem) $gpu-hack;
    }

    @else if $animation =='scale-up' {
        transform: scale(0.8) $gpu-hack;
    }

    @else if $animation =='rotate-in' {
        transform: rotate(-10deg) scale(0.8) $gpu-hack;
    }

    &.animate-in {
        opacity: 1;
        transform: translateY(0) translateX(0) rotate(0deg) scale(1) $gpu-hack;
        transition: all $duration $ease-out $delay;
    }
}

@mixin stagger-children($delay: 100ms, $max-delay: 1s) {
    >* {
        @for $i from 1 through 20 {
            &:nth-child(#{$i}) {
                $computed-delay: $delay * ($i - 1);

                @if $computed-delay <=$max-delay {
                    transition-delay: $computed-delay;
                }

                @else {
                    transition-delay: $max-delay;
                }
            }
        }
    }
}

@mixin hover-lift($distance: 2px, $shadow: true) {
    transition: transform $duration-200 $ease-out, box-shadow $duration-200 $ease-out;

    &:hover {
        transform: translateY(-$distance);

        @if $shadow {
            box-shadow: $shadow-hover;
        }
    }
}

@mixin hover-scale($scale: 1.05) {
    transition: transform $duration-200 $ease-out;

    &:hover {
        transform: scale($scale) $gpu-hack;
    }
}

@mixin hover-glow($color: var(--color-primary)) {
    transition: box-shadow $duration-300 $ease-out;

    &:hover {
        @include glow($color, 'md');
    }
}

/* ========================================== */
// Utility Mixins - Enhanced
/* ========================================== */

@mixin visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
}

@mixin clearfix {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin aspect-ratio($width: 1, $height: 1) {
    aspect-ratio: #{$width} / #{$height};

    // Fallback fÃ¼r Ã¤ltere Browser
    @supports not (aspect-ratio: 1) {
        position: relative;

        &::before {
            content: '';
            display: block;
            padding-top: #{$height / $width * 100%};
        }

        >* {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
}

@mixin scrollbar($width: 8px, $track: transparent, $thumb: var(--color-border)) {
    &::-webkit-scrollbar {
        width: $width;
        height: $width;
    }

    &::-webkit-scrollbar-track {
        background: $track;
        border-radius: #{$width / 2};
    }

    &::-webkit-scrollbar-thumb {
        background: $thumb;
        border-radius: #{$width / 2};

        &:hover {
            background: var(--color-border-secondary);
        }
    }

    // Firefox
    scrollbar-width: thin;
    scrollbar-color: $thumb $track;
}

@mixin hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;

    &::-webkit-scrollbar {
        display: none;
    }
}

/* ========================================== */
// Theme-aware Mixins
/* ========================================== */

@mixin theme-surface($elevation: 1) {
    background-color: var(--color-surface);

    @if $elevation ==1 {
        box-shadow: var(--shadow);
    }

    @else if $elevation ==2 {
        box-shadow: var(--shadow-hover);
    }

    @else if $elevation ==3 {
        box-shadow: 0 20px 40px rgba(black, 0.1);
    }
}

@mixin theme-border($side: 'all', $style: solid) {
    @if $side =='all' {
        border: 1px $style var(--color-border);
    }

    @else if $side =='top' {
        border-top: 1px $style var(--color-border);
    }

    @else if $side =='bottom' {
        border-bottom: 1px $style var(--color-border);
    }

    @else if $side =='left' {
        border-left: 1px $style var(--color-border);
    }

    @else if $side =='right' {
        border-right: 1px $style var(--color-border);
    }
}

@mixin theme-card($hover: true) {
    background-color: var(--color-card-bg);
    border: 1px solid var(--color-card-border);
    border-radius: var(--border-radius-default);
    box-shadow: var(--shadow-card);
    transition: var(--transition-theme);

    @if $hover {
        &:hover {
            box-shadow: var(--shadow-card-hover);
            border-color: var(--color-card-border-hover);
        }
    }
}

/* ========================================== */
// Accessibility Mixins
/* ========================================== */

@mixin focus-visible($color: var(--color-primary), $width: 2px, $offset: 2px) {
    &:focus-visible {
        outline: $width solid $color;
        outline-offset: $offset;
    }
}

@mixin reduced-motion {
    @media (prefers-reduced-motion: reduce) {
        @content;
    }
}

@mixin high-contrast {
    @media (prefers-contrast: high) {
        @content;
    }
}

@mixin dark-mode {
    @media (prefers-color-scheme: dark) {
        @content;
    }
}

@mixin light-mode {
    @media (prefers-color-scheme: light) {
        @content;
    }
}

@mixin print-hidden {
    @media print {
        display: none !important;
    }
}

@mixin print-only {
    @media print {
        @content;
    }
}

/* ========================================== */
// Advanced Layout Mixins
/* ========================================== */

// CSS Grid Areas
@mixin grid-area($name) {
    grid-area: $name;
}

@mixin grid-template($areas, $columns: 1fr, $rows: auto) {
    display: grid;
    grid-template-areas: $areas;
    grid-template-columns: $columns;
    grid-template-rows: $rows;
}

// Masonry Layout
@mixin masonry($columns: 3, $gap: $space-4) {
    column-count: $columns;
    column-gap: $gap;

    >* {
        break-inside: avoid;
        margin-bottom: $gap;
    }

    @include mobile-only {
        column-count: 1;
    }

    @include tablet-only {
        column-count: max(2, $columns - 1);
    }
}

// Sticky Footer
@mixin sticky-footer($footer-height) {
    min-height: 100vh;
    display: flex;
    flex-direction: column;

    >main {
        flex: 1 0 auto;
    }

    >footer {
        flex-shrink: 0;
        height: $footer-height;
    }
}

/* ========================================== */
// Performance Mixins
/* ========================================== */

// GPU Acceleration
@mixin gpu-accelerated {
    transform: $gpu-hack;
    backface-visibility: hidden;
    perspective: 1000px;
}

// Will Change Optimization
@mixin will-change($properties...) {
    will-change: $properties;

    @include reduced-motion {
        will-change: auto;
    }
}

// Image Optimization
@mixin responsive-image {
    max-width: 100%;
    height: auto;
    vertical-align: middle;
}

@mixin object-fit($fit: cover, $position: center) {
    object-fit: $fit;
    object-position: $position;
}

/* ========================================== */
// Custom Property Mixins
/* ========================================== */

// CSS Custom Property with Fallback
@mixin css-var($property, $var-name, $fallback) {
    #{$property}: $fallback;
    #{$property}: var(--#{$var-name}, #{$fallback});
}

// Generate CSS Custom Properties
@mixin generate-custom-properties($map, $prefix: '') {
    @each $key, $value in $map {
        @if $prefix !='' {
            --#{$prefix}-#{$key}: #{$value};
        }

        @else {
            --#{$key}: #{$value};
        }
    }
}

/* ========================================== */
// E-Commerce Specific Mixins
/* ========================================== */

// Product Card
@mixin product-card {
    @include theme-card;
    position: relative;
    overflow: hidden;

    .product-image {
        @include aspect-ratio(1, 1);
        overflow: hidden;

        img {
            @include responsive-image;
            @include object-fit(cover);
            transition: transform $duration-300 $ease-out;
        }
    }

    &:hover .product-image img {
        transform: scale(1.05);
    }

    .product-badge {
        position: absolute;
        top: $space-2;
        left: $space-2;
        z-index: 1;
    }

    .product-actions {
        position: absolute;
        top: $space-2;
        right: $space-2;
        opacity: 0;
        transform: translateY(-$space-2);
        transition: all $duration-200 $ease-out;
    }

    &:hover .product-actions {
        opacity: 1;
        transform: translateY(0);
    }
}

// Price Display
@mixin price-display {
    .price-current {
        font-weight: $font-weight-bold;
        color: var(--color-price-current, var(--color-text-primary));
    }

    .price-original {
        text-decoration: line-through;
        color: var(--color-price-original, var(--color-text-secondary));
        font-size: 0.9em;
    }

    .price-discount {
        color: var(--color-price-discount, var(--color-error));
        font-weight: $font-weight-semibold;
    }
}

// Rating Stars
@mixin rating-stars($size: 1rem) {
    display: inline-flex;
    gap: $space-0_5;

    .star {
        width: $size;
        height: $size;
        color: var(--color-rating-empty, var(--color-border));

        &.filled {
            color: var(--color-rating-filled, var(--color-warning));
        }
    }
}

/* ========================================== */
// Debug & Development Mixins
/* ========================================== */

// Debug Outline
@mixin debug-outline($color: red) {
    outline: 2px solid $color !important;
    outline-offset: -2px !important;

    * {
        outline: 1px solid rgba($color, 0.5) !important;
        outline-offset: -1px !important;
    }
}

// Show Grid
@mixin show-grid($color: rgba(red, 0.1)) {
    background-image:
        linear-gradient(to right, $color 1px, transparent 1px),
        linear-gradient(to bottom, $color 1px, transparent 1px);
    background-size: 20px 20px;
}

// Development Only
@mixin dev-only {
    @if $enable-dev-mode {
        @content;
    }
}