/* ========================================== */
/* ================ ANIMATIONS ============== */
/* ========================================== */
/* Futuristisches Animation System für GSAP Integration */

/* ========================================== */
// Animation Configuration
/* ========================================== */

// Performance optimierte GPU-Beschleunigung
$gpu-hack: translateZ(0) !default;
$will-change-transform: transform !default;
$will-change-opacity: opacity !default;
$will-change-auto: auto !default;

/* ========================================== */
// Base Animation Classes - GSAP Ready
/* ========================================== */

// GPU Acceleration für alle animierten Elemente
.animate-gpu {
    transform: $gpu-hack;
    will-change: $will-change-transform;
}

.animate-opacity {
    will-change: $will-change-opacity;
}

.animate-auto {
    will-change: $will-change-auto;
}

/* ========================================== */
// Entrance Animations - GSAP FromTo Prepared
/* ========================================== */

// Fade Animations
.animate-fade-in {
    opacity: 0;
    transform: $gpu-hack;

    &.animate-active {
        opacity: 1;
    }
}

.animate-fade-out {
    opacity: 1;
    transform: $gpu-hack;

    &.animate-active {
        opacity: 0;
    }
}

// Slide Animations - Von verschiedenen Richtungen
.animate-slide-up {
    opacity: 0;
    transform: translateY(2rem) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: translateY(0) $gpu-hack;
    }
}

.animate-slide-down {
    opacity: 0;
    transform: translateY(-2rem) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: translateY(0) $gpu-hack;
    }
}

.animate-slide-left {
    opacity: 0;
    transform: translateX(2rem) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: translateX(0) $gpu-hack;
    }
}

.animate-slide-right {
    opacity: 0;
    transform: translateX(-2rem) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: translateX(0) $gpu-hack;
    }
}

// Scale Animations
.animate-scale-in {
    opacity: 0;
    transform: scale(0.9) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: scale(1) $gpu-hack;
    }
}

.animate-scale-out {
    opacity: 1;
    transform: scale(1) $gpu-hack;

    &.animate-active {
        opacity: 0;
        transform: scale(0.9) $gpu-hack;
    }
}

// Zoom Animations
.animate-zoom-in {
    opacity: 0;
    transform: scale(0.5) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: scale(1) $gpu-hack;
    }
}

.animate-zoom-out {
    opacity: 1;
    transform: scale(1) $gpu-hack;

    &.animate-active {
        opacity: 0;
        transform: scale(1.5) $gpu-hack;
    }
}

// Rotate Animations
.animate-rotate-in {
    opacity: 0;
    transform: rotate(-180deg) scale(0.8) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: rotate(0deg) scale(1) $gpu-hack;
    }
}

.animate-flip-in {
    opacity: 0;
    transform: rotateY(-90deg) $gpu-hack;

    &.animate-active {
        opacity: 1;
        transform: rotateY(0deg) $gpu-hack;
    }
}

/* ========================================== */
// Continuous Animations - CSS Keyframes für Performance
/* ========================================== */

// Floating Animation
@keyframes float {

    0%,
    100% {
        transform: translateY(0) $gpu-hack;
    }

    50% {
        transform: translateY(-0.5rem) $gpu-hack;
    }
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

// Pulse Animation
@keyframes pulse {

    0%,
    100% {
        transform: scale(1) $gpu-hack;
    }

    50% {
        transform: scale(1.05) $gpu-hack;
    }
}

.animate-pulse {
    animation: pulse 2s ease-in-out infinite;
}

// Glow Pulse - Futuristisch
@keyframes glow-pulse {

    0%,
    100% {
        box-shadow: var(--glow-effect, #{$glow-base});
        filter: brightness(1);
    }

    50% {
        box-shadow: var(--glow-effect, #{$glow-lg});
        filter: brightness(1.1);
    }
}

.animate-glow-pulse {
    @if $enable-glow-effects {
        animation: glow-pulse 2s ease-in-out infinite;
    }
}

// Spin Animation
@keyframes spin {
    from {
        transform: rotate(0deg) $gpu-hack;
    }

    to {
        transform: rotate(360deg) $gpu-hack;
    }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

.animate-spin-slow {
    animation: spin 3s linear infinite;
}

// Bounce Animation
@keyframes bounce {

    0%,
    20%,
    53%,
    80%,
    100% {
        transform: translateY(0) $gpu-hack;
    }

    40%,
    43% {
        transform: translateY(-1rem) $gpu-hack;
    }

    70% {
        transform: translateY(-0.5rem) $gpu-hack;
    }

    90% {
        transform: translateY(-0.25rem) $gpu-hack;
    }
}

.animate-bounce {
    animation: bounce 1s ease-in-out;
}

// Shake Animation
@keyframes shake {

    0%,
    100% {
        transform: translateX(0) $gpu-hack;
    }

    10%,
    30%,
    50%,
    70%,
    90% {
        transform: translateX(-0.5rem) $gpu-hack;
    }

    20%,
    40%,
    60%,
    80% {
        transform: translateX(0.5rem) $gpu-hack;
    }
}

.animate-shake {
    animation: shake 0.5s ease-in-out;
}

/* ========================================== */
// Futuristic Glow Animations
/* ========================================== */

// Neon Border Animation
@keyframes neon-border {

    0%,
    100% {
        border-color: var(--color-primary);
        box-shadow:
            0 0 5px var(--color-primary),
            inset 0 0 5px var(--color-primary);
    }

    50% {
        border-color: var(--color-accent);
        box-shadow:
            0 0 15px var(--color-accent),
            inset 0 0 15px var(--color-accent);
    }
}

.animate-neon-border {
    @if $enable-glow-effects {
        border: 1px solid var(--color-primary);
        animation: neon-border 2s ease-in-out infinite;
    }
}

// Scanning Line Effect
@keyframes scan-line {
    0% {
        transform: translateY(-100%) $gpu-hack;
        opacity: 0;
    }

    50% {
        opacity: 1;
    }

    100% {
        transform: translateY(100vh) $gpu-hack;
        opacity: 0;
    }
}

.animate-scan-line {
    position: relative;
    overflow: hidden;

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg,
                transparent,
                var(--color-primary),
                transparent);
        animation: scan-line 3s ease-in-out infinite;
        z-index: 1;
    }
}

// Matrix Rain Effect (CSS Only)
@keyframes matrix-rain {
    0% {
        transform: translateY(-100vh) $gpu-hack;
        opacity: 1;
    }

    100% {
        transform: translateY(100vh) $gpu-hack;
        opacity: 0;
    }
}

.animate-matrix-bg {
    position: relative;
    overflow: hidden;

    &::before {
        content: '0101010101010101010101010101010101010101';
        position: absolute;
        top: -100vh;
        left: 0;
        right: 0;
        font-family: $font-family-mono;
        font-size: $font-size-xs;
        color: var(--color-primary);
        opacity: 0.1;
        white-space: pre-wrap;
        word-break: break-all;
        animation: matrix-rain 10s linear infinite;
        pointer-events: none;
    }
}

// Holographic Effect
@keyframes holographic {

    0%,
    100% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }
}

.animate-holographic {
    background: linear-gradient(45deg,
            var(--color-primary),
            var(--color-accent),
            var(--color-primary));
    background-size: 200% 200%;
    animation: holographic 3s ease-in-out infinite;

    @if $enable-glow-effects {
        box-shadow: 0 0 20px rgba(var(--color-primary), 0.3);
    }
}

/* ========================================== */
// Interactive Hover Animations
/* ========================================== */

// Lift Effect
.hover-lift {
    transition: all $duration-200 $ease-out;

    &:hover {
        transform: translateY(-0.25rem) $gpu-hack;
        box-shadow: var(--shadow-hover);

        @if $enable-glow-effects {
            filter: brightness(1.05);
        }
    }
}

// Glow on Hover
.hover-glow {
    transition: all $duration-300 $ease-out;

    @if $enable-glow-effects {
        &:hover {
            box-shadow: var(--glow-effect);
            transform: scale(1.02) $gpu-hack;
        }
    }
}

// Scale on Hover
.hover-scale {
    transition: transform $duration-200 $ease-out;

    &:hover {
        transform: scale(1.05) $gpu-hack;
    }
}

// Rotate on Hover
.hover-rotate {
    transition: transform $duration-300 $ease-out;

    &:hover {
        transform: rotate(5deg) $gpu-hack;
    }
}

// Slide Border Effect
.hover-slide-border {
    position: relative;
    overflow: hidden;

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
                transparent,
                var(--color-primary),
                transparent);
        transition: left $duration-500 $ease-out;
    }

    &:hover::before {
        left: 100%;
    }
}

/* ========================================== */
// Loading Animations
/* ========================================== */

// Skeleton Loading
@keyframes skeleton-loading {
    0% {
        background-position: -200px 0;
    }

    100% {
        background-position: calc(200px + 100%) 0;
    }
}

.animate-skeleton {
    background: linear-gradient(90deg,
            var(--color-background-secondary) 25%,
            var(--color-background-tertiary) 50%,
            var(--color-background-secondary) 75%);
    background-size: 200px 100%;
    animation: skeleton-loading 1.5s infinite;
}

// Spinner Loading
.animate-spinner {
    width: 2rem;
    height: 2rem;
    border: 2px solid var(--color-border);
    border-top-color: var(--color-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

// Dots Loading
@keyframes dots-loading {

    0%,
    20% {
        color: var(--color-primary);
        transform: scale(1) $gpu-hack;
    }

    50% {
        color: var(--color-text-tertiary);
        transform: scale(0.8) $gpu-hack;
    }

    100% {
        color: var(--color-primary);
        transform: scale(1) $gpu-hack;
    }
}

.animate-dots {
    display: inline-flex;
    gap: $spacing-2;

    .dot {
        width: 0.5rem;
        height: 0.5rem;
        background: currentColor;
        border-radius: 50%;
        animation: dots-loading 1.5s infinite ease-in-out;

        &:nth-child(2) {
            animation-delay: 0.2s;
        }

        &:nth-child(3) {
            animation-delay: 0.4s;
        }
    }
}

/* ========================================== */
// Page Transition Animations
/* ========================================== */

// Page Enter
.page-enter {
    opacity: 0;
    transform: translateY(2rem) $gpu-hack;
}

.page-enter-active {
    opacity: 1;
    transform: translateY(0) $gpu-hack;
    transition: all $duration-500 $ease-out;
}

// Page Exit
.page-exit {
    opacity: 1;
    transform: translateY(0) $gpu-hack;
}

.page-exit-active {
    opacity: 0;
    transform: translateY(-2rem) $gpu-hack;
    transition: all $duration-300 $ease-in;
}

/* ========================================== */
// Stagger Animation Classes (für GSAP)
/* ========================================== */

.stagger-children>* {
    opacity: 0;
    transform: translateY(1rem) $gpu-hack;
}

.stagger-fade>* {
    opacity: 0;
}

.stagger-scale>* {
    opacity: 0;
    transform: scale(0.8) $gpu-hack;
}

.stagger-slide-up>* {
    opacity: 0;
    transform: translateY(2rem) $gpu-hack;
}

.stagger-slide-left>* {
    opacity: 0;
    transform: translateX(-2rem) $gpu-hack;
}

/* ========================================== */
// Performance Optimizations
/* ========================================== */

// Reduced Motion Support
@media (prefers-reduced-motion: reduce) {

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }

    .animate-float,
    .animate-pulse,
    .animate-glow-pulse,
    .animate-spin,
    .animate-bounce,
    .animate-neon-border,
    .animate-scan-line,
    .animate-matrix-bg,
    .animate-holographic {
        animation: none !important;
    }
}

// Battery Optimization (wenn unterstützt)
@media (prefers-reduced-motion: no-preference) {
    .animate-battery-save {
        // Reduziere Animationen bei niedrigem Akku
        animation-duration: 2s !important;
        animation-iteration-count: 3 !important;
    }
}

/* ========================================== */
// Animation Utility Classes
/* ========================================== */

.animation-delay-75 {
    animation-delay: 75ms;
}

.animation-delay-100 {
    animation-delay: 100ms;
}

.animation-delay-150 {
    animation-delay: 150ms;
}

.animation-delay-200 {
    animation-delay: 200ms;
}

.animation-delay-300 {
    animation-delay: 300ms;
}

.animation-delay-500 {
    animation-delay: 500ms;
}

.animation-delay-700 {
    animation-delay: 700ms;
}

.animation-delay-1000 {
    animation-delay: 1000ms;
}

.animation-duration-75 {
    animation-duration: 75ms;
}

.animation-duration-100 {
    animation-duration: 100ms;
}

.animation-duration-150 {
    animation-duration: 150ms;
}

.animation-duration-200 {
    animation-duration: 200ms;
}

.animation-duration-300 {
    animation-duration: 300ms;
}

.animation-duration-500 {
    animation-duration: 500ms;
}

.animation-duration-700 {
    animation-duration: 700ms;
}

.animation-duration-1000 {
    animation-duration: 1000ms;
}

.animation-ease-linear {
    animation-timing-function: linear;
}

.animation-ease-in {
    animation-timing-function: $ease-in;
}

.animation-ease-out {
    animation-timing-function: $ease-out;
}

.animation-ease-in-out {
    animation-timing-function: $ease-in-out;
}

.animation-fill-forwards {
    animation-fill-mode: forwards;
}

.animation-fill-backwards {
    animation-fill-mode: backwards;
}

.animation-fill-both {
    animation-fill-mode: both;
}

.animation-infinite {
    animation-iteration-count: infinite;
}

.animation-once {
    animation-iteration-count: 1;
}

.animation-twice {
    animation-iteration-count: 2;
}

.animation-paused {
    animation-play-state: paused;
}

.animation-running {
    animation-play-state: running;
}